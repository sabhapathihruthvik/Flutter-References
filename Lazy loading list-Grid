import 'package:flutter/material.dart';

void main() => runApp(const MyApp());

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return const MaterialApp(
      debugShowCheckedModeBanner: false,
      home: LazyLoadingDemo(),
    );
  }
}

class LazyLoadingDemo extends StatefulWidget {
  const LazyLoadingDemo({super.key});

  @override
  _LazyLoadingDemoState createState() => _LazyLoadingDemoState();
}

class _LazyLoadingDemoState extends State<LazyLoadingDemo> {
  final List<int> _items = List.generate(20, (index) => index);
  bool _isLoading = false;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text("Lazy Loading Lists")),
      body: NotificationListener<ScrollNotification>(
        onNotification: (ScrollNotification scrollInfo) {
          if (!_isLoading &&
              scrollInfo.metrics.pixels ==
                  scrollInfo.metrics.maxScrollExtent) {
            _loadMoreData();
            return true;
          }
          return false;
        },
        child: ListView.builder(
          itemCount: _items.length + (_isLoading ? 1 : 0),
          itemBuilder: (context, index) {
            if (index >= _items.length) {
              return const Center(child: CircularProgressIndicator());
            }
            return ListTile(title: Text("Item ${_items[index]}"));
          },
        ),
      ),
    );
  }

  void _loadMoreData() {
    setState(() {
      _isLoading = true;
    });
    Future.delayed(const Duration(seconds: 2), () {
      setState(() {
        _items.addAll(List.generate(20, (index) => _items.length + index));
        _isLoading = false;
      });
    });
  }
}
