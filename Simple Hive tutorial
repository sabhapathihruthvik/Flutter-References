import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
import 'package:hive_flutter/hive_flutter.dart';

void main() async {
  WidgetsFlutterBinding.ensureInitialized();
  await Hive.initFlutter(); // Initialize Hive
  await Hive.openBox('myBox'); // Open a Hive box

  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return const MaterialApp(
      debugShowCheckedModeBanner: false,
      home: HiveDemo(),
    );
  }
}

class HiveDemo extends StatefulWidget {
  const HiveDemo({super.key});

  @override
  // ignore: library_private_types_in_public_api
  _HiveDemoState createState() => _HiveDemoState();
}

class _HiveDemoState extends State<HiveDemo> {
  TextEditingController nameController = TextEditingController();
  String storedName = "No name saved";

  @override
  void initState() {
    super.initState();
    loadName();
  }

  // Save data to Hive
  Future<void> saveName(String name) async {
    final box = Hive.box('myBox');
    await box.put('userName', name);
    if (kDebugMode) {
      print("Name saved: $name");
    }
    loadName(); // Update UI
  }

  // Load data from Hive
  Future<void> loadName() async {
    final box = Hive.box('myBox');
    setState(() {
      storedName = box.get('userName', defaultValue: "No name saved");
    });
    if (kDebugMode) {
      print("Loaded name: $storedName");
    }
  }

  // Clear stored data
  Future<void> clearName() async {
    final box = Hive.box('myBox');
    await box.delete('userName');
    setState(() {
      storedName = "No name saved";
    });
    if (kDebugMode) {
      print("Name cleared");
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text('Hive Storage Demo')),
      body: Padding(
        padding: const EdgeInsets.all(20.0),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Text("Stored Name: $storedName",
                style: const TextStyle(fontSize: 18)),
            TextField(
              controller: nameController,
              decoration: const InputDecoration(labelText: "Enter your name"),
            ),
            const SizedBox(height: 20),
            ElevatedButton(
              onPressed: () {
                saveName(nameController.text.trim());
              },
              child: const Text("Save Name"),
            ),
            ElevatedButton(
              onPressed: clearName,
              child: const Text("Clear Name"),
            ),
          ],
        ),
      ),
    );
  }
}
