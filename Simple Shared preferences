import 'package:flutter/foundation.dart';
import 'package:flutter/material.dart';
import 'package:shared_preferences/shared_preferences.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  @override
  Widget build(BuildContext context) {
    return const MaterialApp(
      debugShowCheckedModeBanner: false,
      home: SharedPreferencesDemo(),
    );
  }
}

class SharedPreferencesDemo extends StatefulWidget {
  const SharedPreferencesDemo({super.key});

  @override
  // ignore: library_private_types_in_public_api
  _SharedPreferencesDemoState createState() => _SharedPreferencesDemoState();
}

class _SharedPreferencesDemoState extends State<SharedPreferencesDemo> {
  TextEditingController nameController = TextEditingController();
  String storedName = "No name saved";

  @override
  void initState() {
    super.initState();
    loadName(); // Load name when the app starts
  }

  // Save data to SharedPreferences
  Future<void> saveName(String name) async {
    final prefs = await SharedPreferences.getInstance();
    await prefs.setString('userName', name);
    if (kDebugMode) {
      print("Name saved: $name");
    }
  }

  // Load data from SharedPreferences
  Future<void> loadName() async {
    final prefs = await SharedPreferences.getInstance();
    setState(() {
      storedName = prefs.getString('userName') ?? "No name saved";
    });
    if (kDebugMode) {
      print("Loaded name: $storedName");
    }
  }

  // Clear stored data
  Future<void> clearName() async {
    final prefs = await SharedPreferences.getInstance();
    await prefs.remove('userName');
    setState(() {
      storedName = "No name saved";
    });
    if (kDebugMode) {
      print("Name cleared");
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(title: const Text('Shared Preferences Demo')),
      body: Padding(
        padding: const EdgeInsets.all(20.0),
        child: Column(
          mainAxisAlignment: MainAxisAlignment.center,
          children: [
            Text("Stored Name: $storedName",
                style: const TextStyle(fontSize: 18)),
            TextField(
              controller: nameController,
              decoration: const InputDecoration(labelText: "Enter your name"),
            ),
            const SizedBox(height: 20),
            ElevatedButton(
              onPressed: () {
                saveName(nameController.text.trim());
                loadName(); // Update UI
              },
              child: const Text("Save Name"),
            ),
            ElevatedButton(
              onPressed: clearName,
              child: const Text("Clear Name"),
            ),
          ],
        ),
      ),
    );
  }
}
